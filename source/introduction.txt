.. _introduction:

Getting Started
===============

Simple Example
--------------

To start with our tutorial we create the simplest program possible.
This program will create an empty 200 x 200 pixel window. 
Note that the appearance of the window will depend on your current GNOME theme. 

.. image:: ../images/simple_example.png

.. literalinclude:: ../examples/simple_example.js
    :linenos:

We will now explain each line of the example.

We start the program with a `shebang-directive <https://en.wikipedia.org/wiki/Shebang_(Unix)>`_, 
which tells the operating system what interpreter to use to execute the file. \

.. literalinclude:: ../examples/simple_example.js
    :lines: 1
    :linenos:
    :lineno-start: 1

In the beginning, we have to import the Gtk module to be able to access GTK+’s classes and functions.
Gtk is one of the libraries that make use of GObject introspection, and is therefore 
listed under the gi collection. 

.. literalinclude:: ../examples/simple_example.js
    :lines: 3
    :linenos:
    :lineno-start: 3

After we have imported Gtk, we must initialize it. In the Gtk bindings for many other languages, 
Gtk can be initialized with a list of strings, the list of arguments that was passed to the program (argv).
This does not work in Gjs yet. As of now, Gtk.init *must* be initialized with a ``null`` argument.

.. literalinclude:: ../examples/simple_example.js
    :lines: 4
    :linenos:
    :lineno-start: 4

The next line creates an empty window.

.. literalinclude:: ../examples/simple_example.js
    :lines: 6
    :linenos:
    :lineno-start: 6

Followed by connecting to the window’s delete event to ensure that the application is terminated if we click on the x to close the window.

.. literalinclude:: ../examples/simple_example.js
    :lines: 7
    :linenos:
    :lineno-start: 7

In the next step we display the window.

.. literalinclude:: ../examples/simple_example.js
    :lines: 8
    :linenos:
    :lineno-start: 8

Finally, we start the GTK+ processing loop which we quit when the window is closed.

.. literalinclude:: ../examples/simple_example.js
    :lines: 9
    :linenos:
    :lineno-start: 9

You can now run the program by making it executable and executing it directly

.. code-block:: bash

    chmod +x simple_example.js
    ./simple_example.js

or by running it with gjs 

.. code-block:: bash

    gjs simple_example.js


Extended Example 
----------------
For something a little more useful, here’s the Gjs version of the classic “Hello World” program.

.. image :: ../images/extended_example.png

.. literalinclude:: ../examples/extended_example.js 
    :linenos:

This example differs from the simple example as we extend :class:`Gtk.Window` to define our own :class:`MyWindow` class. This would formerly be done by using the imports.lang library, which contained conventience methods for defining classes in an object oriented javascript-style, similar to MooTools. With later versions of Gjs, however, ES6-style classes are supported, but they must be registered using the GObject.registerClass call.

In the class’s constructor we have to call the constructor of the parent class, with an appropriate configuration object. In this case, we pass the title property, and set it to Hello World.

.. literalinclude:: ../examples/extended_example.js
    :lines: 11
    :linenos:
    :lineno-start: 11

The next three lines are used to create a button widget, connect to its clicked signal and add it as child to the top-level window.

.. literalinclude:: ../examples/extended_example.js
    :lines: 12-14
    :linenos:
    :lineno-start: 12

Accordingly, the method :meth:`onButtonClicked` will be called if you click on the button.

.. literalinclude:: ../examples/extended_example.js
    :lines: 17-19
    :linenos:
    :lineno-start: 17

Remember to register the class after its definition.

.. literalinclude:: ../examples/extended_example.js
    :lines: 22
    :linenos:
    :lineno-start: 22

Instead of creating an instance of the generic :class:`Gtk.Window` class, we create an instance of :class:`MyWindow`.

.. literalinclude:: ../examples/extended_example.js
    :lines: 24-27
    :linenos:
    :lineno-start: 24
